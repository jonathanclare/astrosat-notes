{"version":3,"sources":["components/NotesList.module.css","components/TextBox.module.css","components/TextArea.module.css","utils/debounce.js","store/store.js","utils/localStorage.js","components/TextBox.js","components/TextArea.js","components/NotesList.js","components/Note.js","App.js","serviceWorker.js","index.js","components/Note.module.css"],"names":["module","exports","list","tag","tagSelected","title","date","box","debounce","func","wait","immediate","timeout","me","this","args","arguments","callNow","clearTimeout","setTimeout","apply","rootReducer","combineReducers","notes","state","length","undefined","action","type","Object","toConsumableArray","newNote","objectSpread","note","Date","toString","concat","map","id","filter","persistedState","name","str","localStorage","getItem","JSON","parse","err","fetchState","console","log","store","createStore","subscribe","getState","json","setItem","stringify","saveState","store_store","TextBox","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","value","handleChange","bind","assertThisInitialized","prevProps","prevState","setState","event","_this2","target","onChange","react_default","a","createElement","Fragment","className","styles","charSet","Component","TexatArea","sortByDate","b","connect","arrSortedNotes","sort","arrNotes","oNote","isSelected","selectedId","Link","key","to","moment","fromNow","Note","mode","content","noteId","onTitleChange","onContentChange","onNoteIdChange","getNote","uuidv4","addNote","updateNote","removeNote","main","notesList","components_NotesList","noteEditor","headerMenu","button","buttonNew","noteTitle","TextBox_TextBox","noteContent","TextArea_TexatArea","footerMenu","onClick","onDeleteBtnPressed","onSaveBtnPressed","dispatch","App","es","BrowserRouter","basename","process","app","Switch","Route","exact","path","component","startup","viewNote","Redirect","editNote","components_Note","match","params","Boolean","window","location","hostname","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","alert"],"mappings":"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","file":"static/js/main.1230747b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"NotesList_list__3-vpX\",\"tag\":\"NotesList_tag__nGKBJ\",\"tagSelected\":\"NotesList_tagSelected__1xmFJ\",\"title\":\"NotesList_title__mX88b\",\"date\":\"NotesList_date__1xsEZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"TextBox_box__2l3mD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"TextArea_box__3BeXH\"};","const debounce = (func, wait, immediate) =>\r\n{\r\n    let timeout;\r\n    return function() \r\n    {\r\n        const me = this, args = arguments;\r\n        const later = function() \r\n        {\r\n            timeout = null;\r\n            if (!immediate) func.apply(me, args);\r\n        };\r\n        const callNow = immediate && !timeout;\r\n        clearTimeout(timeout);\r\n        timeout = setTimeout(later, wait || 250);\r\n        if (callNow) func.apply(me, args);\r\n    };\r\n};\r\n\r\nexport default debounce;","import {createStore, combineReducers} from 'redux';\r\nimport {fetchState, saveState} from '../utils/localStorage';\r\nimport debounce from '../utils/debounce';\r\n\r\n// Reducers\r\n\r\n// Store notes as an object: {id:\"####\"\", date:\"##/##/##\", title:\"A Title\", content:\"Some Content\"}\r\n// In general you only have to pass in {id:\"####\"\", title:\"A Title\", content:\"Some Content\"}\r\n// The date is autogenerated in ADD_NOTE.\r\n// The id is the unique key for accessing the notes.\r\nconst notes = (state = [], action) => \r\n{\r\n    switch (action.type) \r\n    {\r\n        case 'SET_NOTES': // Pass in an array of note objects (used to load from local storage).\r\n            return [...action.notes];\r\n        case 'CLEAR_NOTES': // Empty the array of note objects.\r\n            return []; \r\n        case 'ADD_NOTE': // Add a new note object.\r\n            const newNote = {...action.note};\r\n            // If titles empty add a default.\r\n            if (newNote.title === '') action.note.title = 'Add A Title';\r\n            // Add a date.\r\n            newNote.date = new Date().toString();\r\n            return [...state, newNote];\r\n        case 'UPDATE_NOTE': // Update a note - use the note id to reference it.\r\n            return state.map(note =>\r\n            {\r\n                if (note.id === action.note.id) \r\n                {\r\n                    const newNote = {...action.note};\r\n                    // Add a date\r\n                    newNote.date = new Date().toString();\r\n                    return newNote;\r\n                }\r\n                return note;\r\n            });\r\n        case 'REMOVE_NOTE': // Remove a note - use the note id to reference it.\r\n            return state.filter(note => note.id !== action.id);\r\n        default:\r\n            return state; \r\n    }\r\n};\r\n\r\nconst rootReducer = combineReducers(\r\n{\r\n    notes: notes\r\n});\r\n\r\n// Fetch any state stored in local storage and use this when creating the store.\r\nconst persistedState = fetchState('astrosat-notes-app');\r\n\r\nconsole.log('PERSISTED STATE FROM LOCAL STORAGE:');\r\nconsole.log(persistedState);\r\nconst store = createStore(rootReducer, persistedState);\r\n\r\n// Subscribe to changes to the store so we can update local storage.\r\n// Possibilty of this being called alot so use debounce.\r\nstore.subscribe(debounce(() =>\r\n{\r\n    console.log('SAVE STATE');\r\n    console.log(store.getState().notes);\r\n    saveState('astrosat-notes-app', \r\n    {\r\n        notes: store.getState().notes,\r\n    });\r\n}));\r\n\r\nexport default store;\r\n\r\n// Actions\r\nexport const setNotes = arrNotes => ({type: 'SET_NOTES', notes:arrNotes});\r\nexport const clearNotes = () => ({type: 'CLEAR_NOTES'});\r\nexport const addNote = oNote => ({type: 'ADD_NOTE', note:oNote});\r\nexport const updateNote = oNote => ({type: 'UPDATE_NOTE', note:oNote});\r\nexport const removeNote = noteId => ({type: 'REMOVE_NOTE', id:noteId});","export const fetchState = name =>\r\n{\r\n\ttry \r\n\t{\r\n\t\tconst str =  localStorage.getItem(name);\r\n\t\tif (str === null) return undefined;\r\n\t\treturn JSON.parse(str);\r\n\t}\r\n\tcatch (err) {return undefined;}\r\n};\r\n\r\nexport const saveState = (name, json) =>\r\n{\r\n\ttry  {localStorage.setItem(name, JSON.stringify(json));}\r\n\tcatch (err) {console.log(err);}\r\n};\r\n","import React, {Component}  from 'react';\r\nimport styles from './TextBox.module.css';\r\n\r\nexport default class TextBox extends Component\r\n{\r\n    constructor(props) \r\n    {\r\n        super(props);\r\n        this.state = \r\n        {\r\n            value: this.props.value !== undefined ? this.props.value : ''\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    \r\n    componentDidUpdate(prevProps, prevState) \r\n    {\r\n        if (prevProps.value !== this.props.value) this.setState({value: this.props.value});\r\n    }\r\n\r\n    handleChange(event) \r\n    {\r\n        this.setState({value: event.target.value}, () => this.props.onChange(this.state.value));\r\n    }\r\n\r\n    render() \r\n    {\r\n        return (\r\n            <React.Fragment>\r\n                <input className={styles.box} type=\"text\" charSet=\"utf-8\" value={this.state.value} onChange={this.handleChange} />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n};","import React, {Component}  from 'react';\r\nimport styles from './TextArea.module.css';\r\n\r\nexport default class TexatArea extends Component\r\n{\r\n    constructor(props) \r\n    {\r\n        super(props);\r\n        this.state = \r\n        {\r\n            value: this.props.value !== undefined ? this.props.value : ''\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    \r\n    componentDidUpdate(prevProps, prevState) \r\n    {\r\n        if (prevProps.value !== this.props.value) this.setState({value: this.props.value});\r\n    }\r\n\r\n    handleChange(event) \r\n    {\r\n        this.setState({value: event.target.value}, () => this.props.onChange(this.state.value));\r\n    }\r\n\r\n    render() \r\n    {\r\n        return (\r\n                <textarea className={styles.box} charSet=\"utf-8\" value={this.state.value} onChange={this.handleChange} />\r\n        );\r\n    }\r\n};","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux'\r\nimport moment from 'moment';\r\nimport styles from './NotesList.module.css';\r\n\r\nconst NotesList = props =>\r\n{ \r\n    // Need to highlight the note if its selected - that should be passed in as a prop with the note id.\r\n\r\n    // Sort notes by date.\r\n\tconst arrSortedNotes = [...props.notes];\r\n\tarrSortedNotes.sort(sortByDate);\r\n\r\n    const arrNotes = arrSortedNotes.map(oNote => \r\n    {\r\n        let isSelected = oNote.id === props.selectedId ?  `${styles.tag} ${styles.tagSelected}`  : `${styles.tag}`;\r\n        return (\r\n        <Link key={oNote.id} className={isSelected} to={`/${oNote.id}`} title={`Click to view ${oNote.title}`}> \r\n            <div className={styles.title}>{oNote.title}</div>\r\n            <div className={styles.date}>Last Updated: {moment(oNote.date).fromNow()}</div>\r\n        </Link>)\r\n    });\r\n    if (arrNotes.length > 0)  return <div className={styles.list}>{arrNotes}</div>\r\n    else return null;\r\n};\r\n\r\nconst sortByDate = (a, b) => \r\n{\r\n    return new Date(b.date) - new Date(a.date);\r\n};\r\n\r\nconst mapStateToProps = state => \r\n{\r\n    return {notes: state.notes}\r\n};\r\n\r\nexport default connect(mapStateToProps)(NotesList)","import React, {Component}  from 'react';\r\nimport TextBox from './TextBox';\r\nimport TextArea from './TextArea';\r\nimport NotesList from './NotesList';\r\nimport {addNote, removeNote, updateNote} from '../store/store';\r\nimport {connect} from 'react-redux';\r\nimport uuidv4 from 'uuid/v4';\r\nimport {Link} from 'react-router-dom';\r\nimport styles from './Note.module.css';\r\n\r\nclass Note extends Component\r\n{\r\n    constructor(props) \r\n    {\r\n        super(props);\r\n\r\n        // passed in props \r\n        // prop:mode edit|view\r\n        // prop:id\r\n\r\n        console.log('id: '+props.id);\r\n        console.log('mode: '+props.mode);\r\n\r\n        this.state =  \r\n        { \r\n            title: 'Add A Title',\r\n            content: 'Add Some Content'\r\n        };\r\n\r\n        this.noteId = props.id;\r\n        this.onTitleChange = this.onTitleChange.bind(this);\r\n        this.onContentChange = this.onContentChange.bind(this);\r\n    }\r\n\r\n    componentDidMount()\r\n    {  \r\n        console.log('componentDidMount');\r\n        this.onNoteIdChange(this.props.id);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) \r\n    {\r\n        console.log('componentDidUpdate');\r\n        // Check if the note id has changed without the component mounting.\r\n        if (prevProps.id !== this.props.id) this.onNoteIdChange(this.props.id);\r\n    }\r\n\r\n    // If a note id has been passed in as a prop get the note object associated with it and update the state.\r\n    onNoteIdChange(id)\r\n    {\r\n        this.noteId = id;\r\n        const note = this.getNote(id);\r\n        this.setState({title:note.title, content:note.content});\r\n    }\r\n\r\n    // Find a note using its unique id - or return a new note.\r\n    getNote(id)\r\n    {\r\n        console.log('getNote');\r\n        const arrNotes = this.props.notes.filter(note => note.id === id);\r\n        if (arrNotes.length > 0) \r\n            return arrNotes[0]; // Note found!\r\n        else \r\n            return {title:'Add A Title', content:'Add Some Content'}; // Create a new note if it doesnt already exist.\r\n    }\r\n\r\n    // Note title changed.\r\n    onTitleChange(str)\r\n    {\r\n        console.log(\"onTitleChange\")\r\n        console.log(str)\r\n        this.setState({title:str});\r\n    }\r\n\r\n    // Note content changed.\r\n    onContentChange(str)\r\n    {\r\n        console.log(\"onContentChange\")\r\n        console.log(str)\r\n        this.setState({content:str});\r\n    }\r\n\r\n    // Save note button pressed.\r\n    onSaveBtnPressed()\r\n    {\r\n        console.log(\"onSaveBtnPressed\")\r\n        const id = this.noteId ? this.noteId : uuidv4(); // Generate a new id if its a new note.\r\n        const note = {id:id, title:this.state.title, content:this.state.content};\r\n        \r\n        // Are we viewing a new note?\r\n        if (this.noteId === undefined) \r\n        {\r\n            this.noteId = id;\r\n            this.props.addNote(note);\r\n        }\r\n        else\r\n            this.props.updateNote(note);\r\n    }\r\n\r\n    // Delete note button pressed.\r\n    onDeleteBtnPressed()\r\n    {\r\n        console.log(\"onDeleteBtnPressed\")\r\n        this.props.removeNote(this.noteId);\r\n    }\r\n\r\n    render() \r\n    {\r\n        return (\r\n            <div className={styles.main}>\r\n                <div className={styles.notesList}>\r\n                    <NotesList notes={this.props.notes} selectedId={this.noteId} />\r\n                </div>\r\n                <div className={styles.noteEditor}>\r\n                    <div className={styles.headerMenu}>\r\n                        <Link className={`${styles.button} ${styles.buttonNew}`} to={`/`} title=\"Add A New Note\"> \r\n                            <i className=\"fas fa-plus\"></i>&nbsp;&nbsp;New Note\r\n                        </Link>\r\n                    </div>\r\n                    <div className={styles.noteTitle}>\r\n                        <TextBox onChange={this.onTitleChange} value={this.state.title} />\r\n                    </div>\r\n                    <div className={styles.noteContent}>\r\n                        <TextArea onChange={this.onContentChange} value={this.state.content} />\r\n                    </div>\r\n                    <div className={styles.footerMenu}>\r\n                        <div className={styles.button} title=\"Edit Note\"><i className=\"fas fa-edit\"></i>&nbsp;&nbsp;Edit</div>\r\n                        <div className={styles.button} onClick={() => this.onDeleteBtnPressed()} title=\"Delete Note\"><i className=\"fas fa-trash\"></i>&nbsp;&nbsp;Delete</div>\r\n                        <div className={styles.button} onClick={() => this.onSaveBtnPressed()} title=\"Save Note\">\r\n                            <i className=\"fas fa-save\"></i>&nbsp;&nbsp;Save\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => \r\n{\r\n    return {\r\n        notes: state.notes\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => \r\n{\r\n    return {\r\n        addNote: oNote => dispatch(addNote(oNote)),\r\n        updateNote: oNote => dispatch(updateNote(oNote)),\r\n        removeNote: noteId => dispatch(removeNote(noteId))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Note);","import React, {Component} from 'react';\r\nimport {Provider, connect} from 'react-redux';\r\nimport {BrowserRouter, Route, Redirect, Switch} from 'react-router-dom';\r\nimport store from './store/store';\r\nimport Note from './components/Note';\r\nimport styles from './App.module.css';\r\n\r\nexport default class App extends Component\r\n{ \r\n    // basename - pulled from homepage prop in package.json.\r\n    // Redirect - Any bad urls redirected to base url.\r\n    render() \r\n    {\r\n        return (\r\n            <Provider store={store}>   \r\n                <BrowserRouter basename={process.env.PUBLIC_URL}> \r\n                    <div className={styles.app}>\r\n                        <Switch>\r\n                            <Route exact path=\"/\" component={startup} />\r\n                            <Route exact path=\"/:id\" component={viewNote} />\r\n                            <Redirect to=\"/\" />\r\n                        </Switch>\r\n                    </div>\r\n                </BrowserRouter>\r\n            </Provider>\r\n        );\r\n    }\r\n};\r\n\r\n// Route functions.\r\n\r\n// Default view is dependent on notes having been created.\r\nconst initApp = props => \r\n{\r\n    if (props.notes.length === 0)\r\n        return editNote(props); // No notes created yet - start with add note page.\r\n    else\r\n        return viewNote(props); // Notes created - start with view note page.\r\n};\r\n\r\n// We want to know if any notes have been created at startup so pass the notes into initApp() as a prop from the store.\r\nconst mapStateToProps = state => ({notes: state.notes});\r\nconst startup = connect(mapStateToProps)(initApp);\r\n\r\n// View a note - the default view if notes are available.\r\nconst viewNote = props => (<Note mode=\"view\" id={props.match.params.id} />);\r\n\r\n// Edit a note.\r\nconst editNote = props => (<Note mode=\"edit\" id={props.match.params.id} />);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Note_main__3GyFH\",\"notesList\":\"Note_notesList__11tDJ\",\"noteEditor\":\"Note_noteEditor__15-l1\",\"headerMenu\":\"Note_headerMenu__19L57\",\"noteTitle\":\"Note_noteTitle__THwU9\",\"noteContent\":\"Note_noteContent__odfxW\",\"footerMenu\":\"Note_footerMenu__3a369\",\"button\":\"Note_button__2oKEn\",\"buttonNew\":\"Note_buttonNew__39J4p\",\"alert\":\"Note_alert__2kIMC\"};"],"sourceRoot":""}